#
# Copyright (C) Richard Ferreira
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR THE COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH
# THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# Except as contained in this notice, the name(s) of the above copyright
# holders shall not be used in advertising or otherwise to promote the sale,
# use or other dealings in this Software without prior written authorization.

parse_cmdline()
{
	while [ "$1" ]; do
		case "$1" in
		sizes=*)
			sizes=${1#*=}
			shift
			;;
		with_svg=*)
			with_svg=${1#*=}
			shift
			;;
		target=*)
			target=${1#*=}
			target=${target%.*}
			orientation=${1#*.}
			[ "$orientation" = "$target" -o "$orientation" = "$1" ] && unset orientation
			shift
			;;
		*)
			remaining_args="$remaining_args $1"
			shift
			;;
		esac
	done
	: ${sizes:?no size specified}
	: ${target:?no target specified}
}

xmkdir()
{
	while [ "$1" ]; do
		[ -e $1 ] || mkdir $1
		shift
	done
}

dynaspot()
{
	: ${1?:dynaspot: argument required}
	image_size=$(identify $1|cut -d' ' -f3)
	: ${image_size:?undefined}
	size_x=${image_size%x*}
	size_y=${image_size#*x}
	: ${size_x:?undefined}
	: ${size_y:?undefined}
	hotspot_x=$(calc "($size_x/2)-1")
	hotspot_y=$(calc "($size_y/2)-1")
	: ${hotspot_x:?undefined}
	: ${hotspot_y:?undefined}
}

calc()
{
	LC_NUMERIC=C
	printf "%.0f" $(bc <<< "scale=2; $@")
}

die()
{
	echo -e "\033[1;1;31m$(basename $0): $@\033[0m" >&2
	exit 1
}

warning()
{
	echo -e "\033[1;1;33m$(basename $0): $@\033[0m" >&2
}

message()
{
	echo -e "\033[1;1;36m$(basename $0): $@\033[0m"
}
